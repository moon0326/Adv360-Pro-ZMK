#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&mt {
    tapping-term-ms = <210>;
    flavor = "balanced";
};

&lt {
    quick-tap-ms = <0>;
    tapping-term-ms = <200>;
    flavor = "balanced";
};

/ {
    macros {
        win_left: win_left {
            label = "win_left";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND &kp LALT>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp LEFT_COMMAND &kp LALT>;
        };

        win_right: win_right {
            label = "win_right";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND &kp LALT>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LEFT_COMMAND &kp LALT>;
        };

        win_center: win_center {
            label = "win_center";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND &kp LALT>,
                <&macro_tap>,
                <&kp DOWN>,
                <&macro_release>,
                <&kp LEFT_COMMAND &kp LALT>;
        };

        win_max: win_max {
            label = "win_max";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND &kp LALT>,
                <&macro_tap>,
                <&kp UP>,
                <&macro_release>,
                <&kp LEFT_COMMAND &kp LALT>;
        };

        win_top_left_quarter: win_top_left_quarter {
            label = "win_top_left_quarter";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND &kp LALT>,
                <&macro_tap>,
                <&kp Q>,
                <&macro_release>,
                <&kp LEFT_COMMAND &kp LALT>;
        };

        win_top_right_quarter: win_top_right_quarter {
            label = "win_top_right_quarter";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND &kp LALT>,
                <&macro_tap>,
                <&kp W>,
                <&macro_release>,
                <&kp LEFT_COMMAND &kp LALT>;
        };

        win_bottom_left_quarter: win_bottom_left_quarter {
            label = "win_bottom_left_quarter";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND &kp LALT>,
                <&macro_tap>,
                <&kp Z>,
                <&macro_release>,
                <&kp LEFT_COMMAND &kp LALT>;
        };

        win_bottom_right_quarter: win_bottom_right_quarter {
            label = "win_bottom_right_quarter";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND &kp LALT>,
                <&macro_tap>,
                <&kp X>,
                <&macro_release>,
                <&kp LEFT_COMMAND &kp LALT>;
        };

        win_move_to_next_screen: win_move_to_next_screen {
            label = "win_move_to_next_screen";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND &kp LALT>,
                <&macro_tap>,
                <&kp N>,
                <&macro_release>,
                <&kp LEFT_COMMAND &kp LALT>;
        };

        alfred: alfred {
            label = "alfred";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &kp LEFT_COMMAND>,
                <&macro_tap>,
                <&kp SINGLE_QUOTE>,
                <&macro_release>,
                <&kp LEFT_SHIFT &kp LEFT_COMMAND>;
        };

        vimic: vimic {
            label = "vimic";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &kp LEFT_COMMAND>,
                <&macro_tap>,
                <&kp SQT>,
                <&macro_release>,
                <&kp LEFT_SHIFT &kp LEFT_COMMAND>;
        };

        webback: webback {
            label = "webback";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND>,
                <&macro_tap>,
                <&kp LBKT>,
                <&macro_release>,
                <&kp LEFT_COMMAND>;
        };

        webforward: webforward {
            label = "webforward";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND>,
                <&macro_tap>,
                <&kp RBKT>,
                <&macro_release>,
                <&kp LEFT_COMMAND>;
        };

        toKorean: toKorean {
            label = "toKorean";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LEFT_COMMAND>;
        };

        selectword: selectword {
            label = "selectword";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND>,
                <&macro_tap>,
                <&kp W>,
                <&macro_release>,
                <&kp LEFT_COMMAND>;
        };

        moveToEnd: moveToEnd {
            label = "td_moveToEnd";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp E>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        moveToBeginning: moveToBeginning {
            label = "moveToBeginning";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp A>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        missionControl: missionControl {
            label = "missionControl";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp UP>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        vimac: vimac {
            label = "vimac";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND &kp RSHFT>,
                <&macro_tap>,
                <&kp BSLH>,
                <&macro_release>,
                <&kp LEFT_COMMAND &kp RSHFT>;
        };

        run_context: run_context {
            label = "run_context";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp SPACE>,
                <&macro_release>,
                <&kp LCTRL &kp SPACE>;
        };

        run_context_cycle: run_context_cycle {
            label = "run_context_cycle";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND &kp TILDE>,
                <&macro_release>,
                <&kp LEFT_COMMAND &kp TILDE>;
        };
    };
};

/ {
    behaviors {
        #include "macros.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <150>;
            global-quick-tap;
            flavor = "balanced";
            hold-trigger-key-positions = <7 8 9 10 11 12 13 21 22 23 24 25 26 27 38 39 40 41 42 43 44 45 54 55 56 57 58 59 71 72 73 74 75 35 36 37 38 52 53 65 66 67 68 69 70 71>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            global-quick-tap;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 34 35 36 37 38 46 47 48 49 50 51 52 53 60 61 62 63 64 65 66 67 68 69 70>;
            hold-trigger-on-release;
        };

        dollar: dollar {
            compatible = "zmk,behavior-tap-dance";
            label = "DOLLAR";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_4>, <&kp DOLLAR>;
        };
    };

    combos {
        compatible = "zmk,combos";
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC    &kp N1     &kp N2               &kp N3                   &dollar    &kp N5  &tog 1                                                     &mo 3          &kp N6  &kp N7    &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB    &kp Q      &lt 4 W              &kp E                    &kp R      &kp T   &kp F11                                                    &kp LC(J)      &kp Y   &kp U     &kp I      &kp O     &kp P     &kp BSLH
&kp EQUAL  &kp A      &hml LEFT_COMMAND S  &kp D                    &kp F      &kp G   &kp F12    &kp LCTRL  &kp LALT       &kp LGUI   &none      &vimic         &kp H   &kp J     &kp K      &kp L     &kp SEMI  &kp SQT
&kp LSHFT  &kp Z      &kp X                &hml LG(LEFT_CONTROL) C  &kp V      &kp B                         &kp LC(A)      &kp PG_UP                            &kp N   &kp M     &kp COMMA  &kp DOT   &kp FSLH  &vimic
&mo 2      &kp GRAVE  &kp LG(RIGHT)        &kp LEFT                 &kp RIGHT          &kp SPACE  &kp LCMD   &kp LC(E)      &kp PG_DN  &kp ENTER  &kp BACKSPACE          &kp DOWN  &kp UP     &kp LBKT  &kp RBKT  &mo 3
            >;
        };

        keypad {
            bindings = <
&kp ESC    &kp N1     &kp N2   &kp N3    &none      &kp N5  &tog 1                                                    &mo 3            &kp N6  &kp N7          &kp N8          &kp N9     &kp N0    &kp MINUS
&kp TAB    &kp Q      &lt 4 W  &kp E     &kp R      &kp T   &none                                                     &missionControl  &kp Y   &kp U           &kp UP_ARROW    &kp O      &kp P     &kp BSLH
&kp EQUAL  &kp A      &kp S    &kp D     &kp F      &kp G   &none      &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &vimic           &kp H   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &kp SEMI  &kp SQT
&kp LSHFT  &kp Z      &kp X    &kp C     &kp V      &kp B                         &kp HOME      &kp PG_UP                              &kp N   &kp M           &kp COMMA       &kp DOT    &kp FSLH  &kp RSHFT
&mo 2      &kp GRAVE  &none    &kp LEFT  &kp RIGHT          &kp SPACE  &kp LCMD   &kp END       &kp PG_DN  &kp ENTER  &kp BACKSPACE            &kp DOWN        &kp DOWN        &kp LBKT   &kp RBKT  &mo 2
            >;
        };

        fn {
            bindings = <
&kp ESC    &kp F1     &kp F2   &kp F3    &kp F4     &kp F5  &tog 1                                                   &mo 3            &kp F6  &kp F7    &kp F8     &kp F9         &kp F10   &kp F11
&kp TAB    &kp Q      &lt 4 W  &kp E     &kp R      &kp T   &none                                                    &missionControl  &kp Y   &kp U     &kp I      &kp O          &kp P     &kp BSLH
&kp EQUAL  &kp A      &kp S    &kp D     &kp F      &kp G   &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &vimic           &kp H   &kp J     &kp K      &kp LG(RIGHT)  &kp SEMI  &kp SQT
&kp LSHFT  &kp Z      &kp X    &kp C     &kp V      &kp B                        &kp HOME      &kp PG_UP                              &kp N   &kp M     &kp COMMA  &kp DOT        &kp FSLH  &kp RSHFT
&mo 2      &kp GRAVE  &none    &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp SPACE                &kp DOWN  &kp DOWN   &kp LBKT       &kp RBKT  &mo 2
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none                 &none                 &none                 &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none                 &kp LC(LG(NUMBER_2))  &none                 &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &kp LC(LG(NUMBER_1))  &kp LC(LG(NUMBER_4))  &kp LG(LC(NUMBER_3))  &none  &none
&none  &none         &none         &none         &none         &none                             &none      &none                                           &none  &none                 &none                 &none                 &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC            &bl BL_DEC            &none                 &none  &none
            >;
        };

        window_move {
            bindings = <
&kp ESC    &kp N1     &kp N2  &kp N3    &kp N4              &kp N5  &tog 1                                                   &mo 3            &kp N6                    &kp N7            &kp N8                &kp N9             &kp N0    &kp MINUS
&kp TAB    &kp Q      &kp W   &kp E     &kp R               &kp T   &none                                                    &missionControl  &kp Y                     &kp LG(LA(Q))     &kp LG(LA(UP_ARROW))  &kp LG(LA(W))      &kp P     &kp BSLH
&kp EQUAL  &kp A      &kp S   &kp D     &run_context_cycle  &kp G   &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &vimic           &kp LG(GRAVE)             &kp LG(LA(LEFT))  &kp LG(LA(DOWN))      &kp LG(LA(RIGHT))  &kp SEMI  &kp SQT
&kp LSHFT  &kp Z      &kp X   &kp C     &kp V               &kp B                        &kp HOME      &kp PG_UP                              &win_move_to_next_screen  &kp LG(LA(Z))     &kp COMMA             &kp LG(LA(X))      &kp FSLH  &kp RSHFT
&mo 2      &kp GRAVE  &none   &kp LEFT  &kp RIGHT                   &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp SPACE                                  &kp DOWN          &kp DOWN              &kp LBKT           &kp RBKT  &mo 2
            >;
        };
    };
};
